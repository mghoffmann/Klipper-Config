 # This file contains pin mappings for the Creality "v4.2.7" board. To
# use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
step_pin: PB5
dir_pin: !PB6
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: ^PA7
position_endstop: 0.0
position_max: 250

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 265
# This is super high because the error kept happening when it didn't need to
# Should maybe turn this "safety feature" back on by deleting this to restore the default value.
max_extrude_cross_section: 50

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

[display] # RET6 12864 LCD
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

[input_shaper]
shaper_freq_x: 40
shaper_freq_y: 39
shaper_type: mzv

# Beeper pin copied from https://dev.to/wallclocks/enable-buzzer-in-klipper-for-creality-boards-422-427-19mg
[output_pin BEEPER_pin]
pin: PC6
#   Beeper pin. This parameter must be provided.
#   ar37 is the default RAMPS/MKS pin.
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.
[gcode_macro M300]
gcode:
    # Use a random tone if S is omitted.
    {% if params.S %}
        {% set S = params.S|int %}
    {% else %}
        {% set S = range(400, 2400)|random()|int %}
    {% endif %}

    # Use a 10ms duration is P is omitted.           
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro R2]
gcode:
    M300
    M300
    M300
    M300

[gcode_macro alert]
gcode:
    M300 P107 S220
    M300 P107 S233
    M300 P107 S247
    M300 P107 S233
    M300 P107 S220
    M300 P107 S233
    M300 P107 S247
    M300 P107 S233
    M300 P107 S220
    M300 P107 S233
    M300 P107 S247
    M300 P107 S233
    M300 P107 S73
    M300 P107 S82
    M300 P107 S220
    M300 P107 S233
    M300 P107 S247
    M300 P107 S233
    M300 P107 S220
    M300 P107 S233
    M300 P107 S247
    M300 P107 S233
    M300 P107 S220
    M300 P107 S233
    M300 P107 S247
    M300 P107 S233
    M300 P107 S73
    M300 P107 S82
    M300 P107 S247
    M300 P107 S262
    M300 P107 S277
    M300 P107 S262
    M300 P107 S247
    M300 P107 S262
    M300 P107 S277
    M300 P107 S262
    M300 P107 S247
    M300 P107 S262
    M300 P107 S277
    M300 P107 S262
    M300 P107 S82
    M300 P107 S92
    


[gcode_macro present]
gcode:
    G28 X Y
    G0 F6000 Y {printer.toolhead.axis_maximum.y}
    M300 S523 P150
    M300 S440 P150
    # Home the Z axis and move the head up for nozzle clearing
    G28 Z
    G0 Z50

[gcode_macro coldpull]
gcode:
   G28 X Y Z
   G0 F6000 Z {printer.toolhead.axis_maximum.z / 4.0}
   G0 F6000 Y {printer.toolhead.axis_maximum.y / 2.0} X {printer.toolhead.axis_maximum.x / 2.0}
   M300 S600 P150
   M300 S650 P150
   M300 S700 P150
   M300 S700 P150
   {% if params.S %}
       {% set S=params.S %}
   {% else %}
       {% set S=200 %}
   {% endif %}
   
   M104 S{S}

   M300 S{S} P250

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.376
#*# pid_ki = 1.819
#*# pid_kd = 110.665
